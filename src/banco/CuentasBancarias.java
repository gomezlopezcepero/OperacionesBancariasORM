package banco;
// Generated 11-mar-2018 16:11:26 by Hibernate Tools 4.3.1

import java.util.regex.Matcher;
import java.util.regex.Pattern;




/**
 * CuentasBancarias generated by hbm2java
 */
public class CuentasBancarias  implements java.io.Serializable {


     private Integer idCuentaBancaria;
     private String numeroCuenta;
     private String propietario;
     private int saldo;
     private String dni;

    public CuentasBancarias() {
    }

    public CuentasBancarias(String numeroCuenta, String propietario, int saldo, String dni) {
       this.numeroCuenta = numeroCuenta;
       this.propietario = propietario;
       this.saldo = saldo;
       this.dni = dni;
    }
   
    public Integer getIdCuentaBancaria() {
        return this.idCuentaBancaria;
    }
    
    public void setIdCuentaBancaria(Integer idCuentaBancaria) {
        this.idCuentaBancaria = idCuentaBancaria;
    }
    public String getNumeroCuenta() {
        return this.numeroCuenta;
    }
    
    public void setNumeroCuenta(String numeroCuenta) {
        this.numeroCuenta = numeroCuenta;
    }
    public String getPropietario() {
        return this.propietario;
    }
    
    public void setPropietario(String propietario) {
        this.propietario = propietario;
    }
    public int getSaldo() {
        return this.saldo;
    }
    
    public void setSaldo(int saldo) {
        this.saldo = saldo;
    }
    public String getDni() {
        return this.dni;
    }
    
    public void setDni(String dni) {
        this.dni = dni;
    }

    
    
    
    
    
    
    
    public int comprobarNumCuenta(String numcuenta){
        
        int cont=0;
        
       
        Pattern p = Pattern.compile("[0-9]{4}[-]{1}[0-9]{4}[-]{1}[0-9]{4}[-]{1}[0-9]{4}");
        Matcher m = p.matcher(numcuenta);
        boolean b = m.matches();
                
        if(!b){
          cont++;
          System.err.println("El n√∫mero de cuenta es incorrecto");
              }
        
        
        return cont;
        
    }
    
    
    public int comprobarDNI(String textdni){
        
        int dni, restodni, cont=0;
       
        textdni = textdni.toUpperCase();
        Pattern p = Pattern.compile("[0-9]{8}{1}[A-Za-z]");
        Matcher m = p.matcher(textdni);
        boolean b = m.matches();
        
        if(b){
        /*
        String letra, nif;
        
        textdni = textdni.toUpperCase();
				
	dni=Integer.parseInt(textdni.substring(0,8));
				
				
	String[]letrasDNI={"T","R","W","A","G",",M","Y","F","P","D","X","B","N","J","Z","S"
			                ,"Q","V","H","L","C","K","E"};
				 
	restodni= dni%23;
				 
	letra = letrasDNI[restodni];
                                 
        letra = letra.toUpperCase();
				 
        nif=Integer.toString(dni)+letra;
				 
	 if(!nif.equals(textdni)){
					 
	 cont++;
         System.err.println("El DNI no es correcto");
        }
         */
        }
        else{
            cont++;
          System.err.println("El DNI no es correcto");  
        }

        return cont;
    }
    


    



}


